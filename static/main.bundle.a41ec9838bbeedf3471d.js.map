{"version":3,"sources":["webpack:///./source/view/App.tsx","webpack:///./source/main.tsx","webpack:///./source/view/App.scss?4811"],"names":["Header","props","_this","_React$Component","call","this","Object","_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","React","debounce","setState","state","height","width","top","left","mountElement","document","createElement","body","appendChild","componentDidMount","window","addEventListener","handleWindowResize","componentWillUnmount","removeChild","removeEventListener","componentDidUpdate","headerEl","headerRef","current","pushEl","pushRef","offsetHeight","offsetWidth","_getElementOffset","el","element","offsetTop","offsetLeft","offsetParent","getElementOffset","console","log","render","react__WEBPACK_IMPORTED_MODULE_5__","createPortal","style","ref","className","styles","header","text","headerPush","App","columns","_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","Array","map","id","Math","floor","random","rows","_this2","prevState","column","assign","concat","_this3","_babel_runtime_helpers_esm_jsx__WEBPACK_IMPORTED_MODULE_0__","container","containerInner","_","index","columnContainer","row","isButton","join","onClick","addRow","hot","module","getElementById","ReactDOM","_source_view_App__WEBPACK_IMPORTED_MODULE_149__","exports","columnInner"],"mappings":"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","file":"static/main.bundle.a41ec9838bbeedf3471d.js","sourcesContent":["import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { hot } from \"react-hot-loader\";\nimport debounce from \"lodash/debounce\";\nimport styles from \"./App.scss\";\n\nfunction getElementOffset(el: HTMLElement) {\n    let top = 0;\n    let left = 0;\n    let element = el;\n\n    // Loop through the DOM tree\n    // and add it's parent's offset to get page offset\n    do {\n      top += element.offsetTop || 0;\n      left += element.offsetLeft || 0;\n      // @ts-ignore ignore as there is no easy way to guard the Type\n      // without the use of instanceOf HTMLElement\n      element = element.offsetParent;\n    } while (element);\n\n    return {\n        left,\n        top,\n    };\n}\n\ninterface HeaderState {\n    top: number;\n    left: number;\n    height: number;\n    width: number;\n}\n\ninterface HeaderProps {\n    text: string;\n}\n\nclass Header extends React.Component<HeaderProps, HeaderState> {\n    mountElement: HTMLDivElement;\n\n    headerRef = React.createRef<HTMLDivElement>();\n    pushRef = React.createRef<HTMLDivElement>();\n\n    handleWindowResize = debounce(() => this.setState({}), 500);\n\n    constructor(props: HeaderProps) {\n        super(props);\n        this.state = { height: 0, width: 0, top: 0, left: 0 };\n        this.mountElement = document.createElement(\"div\");\n        document.body.appendChild(this.mountElement);\n    }\n\n    componentDidMount() {\n        this.setState({});\n        window.addEventListener(\"resize\", this.handleWindowResize);\n    }\n\n    componentWillUnmount() {\n        document.body.removeChild(this.mountElement);\n        window.removeEventListener(\"resize\", this.handleWindowResize);\n    }\n\n    componentDidUpdate() {\n        const headerEl = this.headerRef.current;\n        const pushEl = this.pushRef.current;\n        if (!(headerEl && pushEl)) { return; }\n        const height = headerEl.offsetHeight;\n        const width = pushEl.offsetWidth;\n        const { top, left } = getElementOffset(pushEl);\n\n        if (\n            (this.state.top !== top) ||\n            (this.state.left !== left) ||\n            (this.state.height !== height) ||\n            (this.state.width !== width)\n        ) {\n            console.log(\"updated location\");\n            this.setState({ height, width, top, left });\n        }\n    }\n    render() {\n        return (\n            <>\n                {createPortal((\n                    <div style={{ top: this.state.top, left: this.state.left, width: this.state.width }} ref={this.headerRef} className={styles.header}>{this.props.text}</div>\n                ), this.mountElement)}\n                <div ref={this.pushRef} style={{ height: this.state.height }} className={styles.headerPush} />\n            </>\n        );\n    }\n}\n\ninterface AppState {\n    columns: Array<{\n        id: number,\n        rows: Array<{\n            id: number,\n        }>,\n    }>;\n}\n\nclass App extends React.Component<{}, AppState> {\n    state = {\n        columns: [...Array(5)].map(() => ({\n            id: Math.floor(Math.random() * 1e8),\n            rows: [...Array(3)].map(() => ({\n                id: Math.floor(Math.random() * 1e8),\n            })),\n        })),\n    };\n    addRow = () => this.setState((prevState) => ({\n        columns: prevState.columns.map((column) => ({ ...column, rows: column.rows.concat({ id: Math.floor(Math.random() * 1e8) })})),\n    }))\n    render() {\n        const { columns } = this.state;\n        return (\n            <section className={styles.container}>\n                <div className={styles.containerInner}>\n                    {[...Array(5)].map((_, index) => (\n                        <React.Fragment key={index}>\n                            <Header text={`Header ${index + 1}`} />\n                            <div className={styles.columnContainer}>\n                                {columns.map((column) => (\n                                    <div key={column.id} className={styles.column}>\n                                        {column.rows.map((row) => (\n                                            <div key={row.id} className={styles.row} />\n                                        ))}\n                                        <button className={[ styles.row, styles.isButton ].join(\" \")} onClick={this.addRow} />\n                                    </div>\n                                ))}\n                            </div>\n                        </React.Fragment>\n                    ))}\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default hot(module)(App);\n","import \"@babel/polyfill\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport App from \"~source/view/App\";\nimport \"./styles.scss\";\n\nconst mountElement = document.getElementById(\"app\");\n\nReactDOM.render(\n    <App />,\n    mountElement,\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_104V2\",\"containerInner\":\"_3iVIo\",\"header\":\"_3UoUo\",\"headerPush\":\"_3RyLw\",\"column\":\"_1ghFt\",\"columnInner\":\"_2VII6\",\"row\":\"_2Pe8Y\",\"isButton\":\"_2OwzK\"};"],"sourceRoot":""}